name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  AWS_REGION: "ap-southeast-1"

permissions:
  id-token: write
  contents: read

jobs:
  build-test-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npm run build
      - run: npm test
      - run: zip -r deploy.zip . -x "node_modules/*" -x "*.git*"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::868133316193:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp ./deploy.zip s3://myaws-deployments/

      - name: Deploy to EC2
        id: deploy
        run: |
          deployment_id=$(aws deploy create-deployment --application-name React-simple --deployment-group-name Web-simple-deploygroup --s3-location bucket=myaws-deployments,key=deploy.zip,bundleType=zip --query "deploymentId" --output text)
          echo "::set-output name=deployment-id::$deployment_id"

      - name: Post-Deployment Validation
        run: |
          # Wait for deployment completion
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment-id }}

          # Perform front page availability test
          response=$(curl -I -s http://ec2-18-141-203-95.ap-southeast-1.compute.amazonaws.com)
          if [[ "$response" != *"200 OK"* ]]; then
            echo "Front page availability test failed. Deployment may have issues."
            exit 1
          else
            echo "Front page availability test passed. Deployment is successful."
          fi
